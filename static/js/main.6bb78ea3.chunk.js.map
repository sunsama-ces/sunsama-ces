{"version":3,"sources":["components/AppBar/AppBar.js","components/BoardBar/BoardBar.js","components/SubTask/SubTask.js","components/Task/Task.js","utilities/formatDate.js","components/Column/Column.js","components/FormTaskDetail/SubTask/SubTask.js","components/FormTaskDetail/FormTaskDetail.js","components/BoardContent/BoardContent.js","utilities/dragDrop.js","components/FormAddHashtag/FormAddHashtag.js","components/FormEditHashtag/FormEditHashtag.js","components/Hashtag/Hashtag.js","components/FilterColumn/FilterColumn.js","components/MainBoard/MainBoard.js","App.js","reportWebVitals.js","index.js"],"names":["AppBar","className","BoardBar","SubTask","props","subtask","onCheckSubTask","isTaskCompleted","useState","status","checkSubTask","setCheckSubTask","useEffect","type","checked","onChange","e","id","target","title","Task","task","hashtags","check","setCheck","subtasks","setSubTasks","isReLoadSubTask","setReLoadSubTask","fetchSubTasks","a","axios","get","BASE_URL","res","data","handleTaskChange","post","id_subtask","status_subtask","onClick","window","location","replace","to","length","map","index","describe","hashtag","name","FormatDateToAdd","dateTask","date","getDate","month","getMonth","getFullYear","Column","isShowAddNewTask","setIsShowAddNewTask","textAreaRef","useRef","valueTextArea","setValueTextArea","useSearchParams","searchParam","column","onTaskDrop","AddNewTask","tasks","current","focus","ShowAddNewTask","rows","placeholder","ref","value","event","Date","idHashtag","newTask","groupName","onDrop","dropResult","getChildPayload","dragClass","dropClass","dropPlaceholder","animationDuration","showOnTop","dropPlaceholderAnimationDuration","setTaskInColumn","onUpdateSubTask","onDeleteSubTask","TitleSubTask","setTitleSubTask","disable","setDisable","Form","Control","size","disabled","onBlur","FormAddTaskDetail","idtask","useParams","setTask","setHashTags","startDate","setStartDate","startDueDate","setStartDueDate","optionHashTags","setOptionHashTags","optionSelectedHashTags","setOptionSelectedHashTags","isReLoadListSubTasks","setReLoadSubTasks","ChangeOptionToHashTags","options","option","push","cat","fetchTasks","defaultOptions","dataTask","dataHashTags","slice","key","forEach","dataSubTask","AcceptChangeTask","edit_task","document","getElementById","parentId","userId","put","ChangeSelectedHashTags","DeleteTask","confirm","delete","AddNewSubTaskInTask","newSubTask","id_delete_sub_task","id_edit_subtask","title_edit_subtask","editSubTask","defaultValue","dateFormat","selected","displayValue","selectedValues","onSelect","onRemove","axiosHeaders","BoardContent","columns","setColumns","ReLoadBoardContent","setReLoadBoardContent","fetchHashTags","valueDate","bonusCondition","dataColumn","moment","Boolean","i","format","add","headers","columnId","removedIndex","addedIndex","ChangeDateOfTask","payload","newColumns","currentColumn","find","arr","dragResult","result","itemToAdd","splice","applyDrag","taskOrder","dateChange","changeDate","id_task","updateDate","setColumnInBoard","FormAddHashtag","onCreateHashtag","modalVisible","setName","isVisible","setIsVisible","onSubmit","preventDefault","required","FormEditHashtag","onEditHashtag","fetch","then","json","catch","error","alert","Hashtag","deleteStatus","setDeleteStatus","setSearchParams","listHashtag","setChannel","response","sort","b","loadHashtag","findByHashtag","style","color","Math","random","toString","substr","trigger","position","FilterColumn","onClickDay","selectRange","minDetail","MainBoard","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","path","element"],"mappings":"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","file":"static/js/main.6bb78ea3.chunk.js","sourcesContent":["import React from 'react';\r\nimport './AppBar.scss';\r\n\r\nconst AppBar = () => {\r\n    return (\r\n        <>\r\n            <nav className=\"navbar-app\">App bar</nav>\r\n        </>\r\n    )\r\n}\r\nexport default AppBar;","import React from 'react';\r\nimport \"./BoardBar.scss\";\r\nconst BoardBar = () =>  {\r\n    return (\r\n        <>\r\n            <nav className=\"navbar-board\">Board bar</nav>\r\n        </>\r\n    )\r\n}\r\nexport default BoardBar","import React, {useEffect, useState} from \"react\";\r\nimport './SubTask.scss';\r\nconst SubTask = (props)=>{\r\n    const { subtask , onCheckSubTask , isTaskCompleted } = props;\r\n    const [checkSubTask, setCheckSubTask] = useState(subtask.status);\r\n    useEffect(()=>{\r\n        if(isTaskCompleted == true) setCheckSubTask(true);\r\n    },[isTaskCompleted]);\r\n    const handleSubTaskChange = (e) => {\r\n        onCheckSubTask(subtask.id,e.target.checked);\r\n        setCheckSubTask(e.target.checked);\r\n    };\r\n    return (\r\n        <div className=\"subtask-item\">\r\n            <input\r\n                type=\"checkbox\"\r\n                className=\"check-subtask checker\"\r\n                checked={checkSubTask}\r\n                onChange={handleSubTaskChange}\r\n            />\r\n            {subtask.title}\r\n        </div>\r\n    )\r\n}\r\nexport default SubTask","import React, {useState,useEffect} from \"react\";\r\nimport './Task.scss';\r\nimport SubTask from \"../SubTask/SubTask\";\r\nimport {AiOutlineInfoCircle} from \"react-icons/all\";\r\nimport {Link} from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {BASE_URL} from \"../../index\";\r\nconst Task = (props)=>{\r\n    const { task } = props;\r\n    //const subtasks = task.subtasks;\r\n    const hashtags = task.hashtags;\r\n    const [check, setCheck] = useState(task.status);\r\n    const [subtasks,setSubTasks] = useState([]);\r\n    const [isReLoadSubTask , setReLoadSubTask] = useState(false);\r\n    useEffect(() => {\r\n        const fetchSubTasks= async () => {\r\n                let res = await axios.get(`${BASE_URL}/tasks/`+task.id+'/subtasks');\r\n                setSubTasks(res.data);\r\n                setReLoadSubTask(false);\r\n        }\r\n        fetchSubTasks();\r\n    },[isReLoadSubTask]);\r\n    const handleTaskChange = async (e) => {\r\n        setCheck(e.target.checked);\r\n        await axios.post(`${BASE_URL}/tasks/`+task.id+'/complete');\r\n        if(e.target.checked == true) setReLoadSubTask(true);\r\n    };\r\n    const onCheckSubTask = async (id_subtask,status_subtask) => {\r\n        try {\r\n            if(status_subtask == false) setCheck(false);\r\n            await axios.post(`${BASE_URL}/tasks/`+id_subtask+'/complete');\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    function OpenFormTaskDetail() {\r\n        window.location.replace(`/task-detail/`+task.id);\r\n    }\r\n    return (\r\n            <div className=\"task-item\">\r\n                <div className=\"header-task\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        className=\"check-task checker\"\r\n                        checked= {check}\r\n                        onChange={handleTaskChange}\r\n                    />\r\n                    <div className=\"title-task\" onClick={OpenFormTaskDetail}>{task.title}</div>\r\n                    <Link to={`/task-detail/`+task.id}>\r\n                        <AiOutlineInfoCircle className=\"info-task\"/>\r\n                    </Link>\r\n                </div>\r\n                {subtasks && subtasks.length > 0 && subtasks.map((subtask  ,index) =>{\r\n                    return (\r\n                        <SubTask\r\n                            key = {subtask.id}\r\n                            subtask = {subtask}\r\n                            onCheckSubTask = {onCheckSubTask}\r\n                            isTaskCompleted = {check}\r\n                        />\r\n                    )\r\n                })}\r\n                <div className=\"decription-task\">\r\n                    {task.describe}\r\n                </div>\r\n                <div className=\"hashtag-of-task\">\r\n                    {hashtags && hashtags.length > 0 && hashtags.map((hashtag ,index) =>{\r\n                        return (\r\n                            <div>\r\n                                #{hashtag.name}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\nexport default Task","export function FormatDateToAdd(dateTask) {\r\n    let date = dateTask.getDate();\r\n    let month = dateTask.getMonth()+1;\r\n    let year = dateTask.getFullYear();\r\n    if(date<10) date = '0'+date;\r\n    if(month<10) month = '0'+month;\r\n    return date+'-'+month+'-'+year;\r\n}","import React, {useEffect, useRef, useState} from \"react\";\r\nimport './Column.scss';\r\nimport Task from \"../Task/Task\";\r\nimport {Container,Draggable} from \"react-smooth-dnd\";\r\nimport {FormatDateToAdd} from \"../../utilities/formatDate\";\r\nimport {useSearchParams} from \"react-router-dom\";\r\nconst Column = (props) => {\r\n    const [isShowAddNewTask , setIsShowAddNewTask] = useState(false);\r\n    const textAreaRef = useRef(null);\r\n    const [valueTextArea,setValueTextArea] = useState(\"\");\r\n    const [searchParam, setSearchParams] = useSearchParams();\r\n    const { column ,onTaskDrop ,AddNewTask} = props;\r\n    const tasks = column.tasks;\r\n    useEffect(()=>{\r\n        if(isShowAddNewTask === true){\r\n            textAreaRef.current.focus();\r\n        }\r\n    },[isShowAddNewTask])\r\n    function handleAddNewTask () {\r\n        if(valueTextArea != null){\r\n            const dateTask = new Date(column.id);\r\n            let idHashtag=searchParam.get('hashtag');\r\n            let newTask = '';\r\n            if(idHashtag!='null' && idHashtag != 0 ) {\r\n                newTask = {\r\n                    \"title\": valueTextArea,\r\n                    \"describe\": \"\",\r\n                    \"date\": FormatDateToAdd(dateTask)+\" 00:00:00\",\r\n                    \"dueDate\": FormatDateToAdd(dateTask)+\" 00:00:00\",\r\n                    \"hashtagsId\": [idHashtag],\r\n                    \"isStatus\": false,\r\n                    \"parentId\": 0,\r\n                    \"userId\": 1\r\n                };\r\n            }\r\n            else {\r\n                newTask = {\r\n                    \"title\": valueTextArea,\r\n                    \"describe\": \"\",\r\n                    \"date\": FormatDateToAdd(dateTask)+\" 00:00:00\",\r\n                    \"dueDate\": FormatDateToAdd(dateTask)+\" 00:00:00\",\r\n                    \"hashtagsId\": [],\r\n                    \"isStatus\": false,\r\n                    \"parentId\": 0,\r\n                    \"userId\": 1\r\n                };\r\n            }\r\n            AddNewTask(newTask);\r\n            setValueTextArea('');\r\n            setIsShowAddNewTask(false);\r\n        }\r\n    }\r\n    const setTaskInColumn = (tasks) => {\r\n        return (tasks && tasks.length > 0 && tasks.map((task,index)=>{\r\n            return(\r\n                <Draggable key = {task.id}>\r\n                    <Task\r\n                        key = {task.id}\r\n                        task={task}\r\n                    />\r\n                </Draggable>\r\n            )\r\n        }))\r\n    }\r\n    function ShowAddNewTask(e) {\r\n        if(isShowAddNewTask === true) setIsShowAddNewTask(false);\r\n        else setIsShowAddNewTask(true);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"column\">\r\n                <header className=\"column-drag-handle\">\r\n                        {column.title}\r\n                </header>\r\n                <div className=\"date_column\">  {column.describe}  </div>\r\n                {isShowAddNewTask === true &&\r\n                    <div className='add-new-task'>\r\n                    <textarea\r\n                        rows=\"1\"\r\n                        className='form-control'\r\n                        placeholder='Enter a title for this task'\r\n                        ref={textAreaRef}\r\n                        value={valueTextArea}\r\n                        onChange={(event) => setValueTextArea(event.target.value)}\r\n                    ></textarea>\r\n                        <div className='group-btn'>\r\n                            <button className='btn btn-success' onClick={handleAddNewTask}>\r\n                                Add Task\r\n                            </button>\r\n                            <i className='fa fa-times icon' onClick={ShowAddNewTask}></i>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {isShowAddNewTask === false &&\r\n                    <footer>\r\n                        <div className=\"footer-action\" onClick={ShowAddNewTask}>\r\n                            <i className='fa fa-plus icon' >\r\n                            </i> Add another task\r\n                        </div>\r\n                    </footer>\r\n                }\r\n                <div className=\"list-task\">\r\n                    <Container\r\n                        {...column.props}\r\n                        groupName=\"col\"\r\n                        onDrop={(dropResult) => onTaskDrop(dropResult,column.id)}\r\n                        getChildPayload={index => tasks[index]}\r\n                        dragClass=\"card-ghost\"\r\n                        dropClass=\"card-ghost-drop\"\r\n                        dropPlaceholder={{\r\n                            animationDuration: 200,\r\n                            showOnTop: true,\r\n                            className: 'task-drop-preview'\r\n                        }}\r\n                        dropPlaceholderAnimationDuration={200}\r\n                    >\r\n                        {setTaskInColumn(tasks)}\r\n                    </Container>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Column;","import React, {useEffect, useState} from \"react\";\r\nimport './SubTask.scss';\r\nimport {Form} from \"react-bootstrap\";\r\nimport {AiOutlineDelete, AiOutlineEdit, FaDotCircle} from \"react-icons/all\";\r\nconst SubTask = (props) =>{\r\n    const { subtask ,onUpdateSubTask,onDeleteSubTask} = props;\r\n    const [TitleSubTask, setTitleSubTask] = useState(\"\");\r\n    const [disable, setDisable] = useState(true);\r\n    useEffect(()=>{\r\n        if(subtask && subtask.title){\r\n            setTitleSubTask(subtask.title);\r\n        }\r\n    },[subtask]);\r\n    function onChangeTitleSubTask(e){\r\n        setTitleSubTask(e.target.value);\r\n    }\r\n    const EnableEditSubTask = () => {\r\n        setDisable(false);\r\n    }\r\n    function onUpdateTitleSubTask(event){\r\n        if(event.target.value !== subtask.name){\r\n            onUpdateSubTask(subtask.id,event.target.value);\r\n        }\r\n        setDisable(true);\r\n    }\r\n    function DeleteSubTask(event) {\r\n        onDeleteSubTask(subtask.id);\r\n    }\r\n    return (\r\n        <div className=\"subtask-item\">\r\n            >\r\n            <Form.Control\r\n            size={\"sm\"}\r\n            type=\"text\"\r\n            value={TitleSubTask}\r\n            className=\"subtask\"\r\n            disabled={disable}\r\n            onChange={onChangeTitleSubTask}\r\n            onBlur={onUpdateTitleSubTask}\r\n        />\r\n            <div className=\"edit-button\">\r\n                <AiOutlineEdit\r\n                    className=\"edit-title-button\"\r\n                    onClick={EnableEditSubTask}\r\n                />\r\n                <AiOutlineDelete\r\n                    className=\"delete-button\"\r\n                    onClick={DeleteSubTask}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SubTask","import React,{useEffect,useState} from \"react\";\r\nimport './FormTaskDetail.scss'\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport SubTask from \"./SubTask/SubTask\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {IoIosAddCircleOutline, RiDeleteBack2Line} from \"react-icons/all\";\r\nimport axios from \"axios\";\r\nimport {BASE_URL} from \"../../index\";\r\nimport {Multiselect} from \"multiselect-react-dropdown\";\r\nimport {FormatDateToAdd} from \"../../utilities/formatDate\";\r\nconst FormAddTaskDetail = () => {\r\n    const { idtask } = useParams();\r\n    const [task,setTask] = useState({});\r\n    const [hashtags, setHashTags] = useState([]);\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [startDueDate, setStartDueDate] = useState(new Date());\r\n    const [subtasks, setSubTasks] = useState([]);\r\n    const [optionHashTags , setOptionHashTags] = useState([]);\r\n    const [optionSelectedHashTags , setOptionSelectedHashTags] = useState([]);\r\n    const [isReLoadListSubTasks,setReLoadSubTasks] = useState(false);\r\n    useEffect( () => {\r\n        const fetchTasks = async () => {\r\n            try {\r\n                let options = [];\r\n                let defaultOptions = [];\r\n                let dataTask = await axios.get(`${BASE_URL}/tasks/` + idtask + '/');\r\n                let dataHashTags = await axios.get(`${BASE_URL}/hashtags/`);\r\n                setTask(dataTask.data);\r\n                setHashTags(dataHashTags.data);\r\n                setStartDate(new Date(dataTask.data.date.slice(0, 10)));\r\n                setStartDueDate(new Date(dataTask.data.date.slice(0, 10)));\r\n                dataTask.data.hashtags.map((hashtag)=>{\r\n                    defaultOptions.push({\r\n                        cat: hashtag.id,\r\n                        key: hashtag.name\r\n                    });\r\n                });\r\n                setOptionSelectedHashTags(defaultOptions);\r\n                dataHashTags.data.forEach((hashtag)=>{\r\n                    options.push({\r\n                        cat: hashtag.id,\r\n                        key: hashtag.name\r\n                    });\r\n                });\r\n                setOptionHashTags(options);\r\n            } catch (e) {\r\n            }\r\n        }\r\n            fetchTasks();\r\n    },[]);\r\n    useEffect(async ()=>{\r\n        let dataSubTask = await axios.get(`${BASE_URL}/tasks/` + idtask + '/subtasks');\r\n        setSubTasks(dataSubTask.data);\r\n        setReLoadSubTasks(false);\r\n    },[isReLoadListSubTasks])\r\n    function ChangeOptionToHashTags(options){\r\n        let hashtags = [];\r\n        options.map((option) =>{\r\n            hashtags.push(option.cat);\r\n        });\r\n        return hashtags;\r\n    }\r\n    const AcceptChangeTask = async () =>{\r\n        const edit_task = {\r\n            \"title\": document.getElementById('name-hashtag').value,\r\n            \"describe\": document.getElementById('valueDescribeTask').value,\r\n            \"date\": FormatDateToAdd(startDate)+\" 00:00:00\",\r\n            \"dueDate\": FormatDateToAdd(startDueDate)+\" 00:00:00\",\r\n            \"hashtagsId\": ChangeOptionToHashTags(optionSelectedHashTags),\r\n            \"isStatus\": task.status,\r\n            \"parentId\": task.parentId,\r\n            \"userId\": task.userId\r\n        }\r\n        await axios.put(`${BASE_URL}/tasks/` + idtask + '/',edit_task);\r\n        window.location.replace('/dashboard');\r\n    }\r\n    function ChangeSelectedHashTags(data){\r\n        setOptionSelectedHashTags(data)\r\n    }\r\n    const DeleteTask = async () => {\r\n        if(window.confirm(\"Do you want to delete this task ?\") == true){\r\n            await axios.delete(`${BASE_URL}/tasks/` + idtask + '/');\r\n            window.location.replace('/dashboard');\r\n        }\r\n    }\r\n    const AddNewSubTaskInTask = async () => {\r\n        if(document.getElementById('title-subtask').value != ''){\r\n            const newSubTask = {\r\n                \"title\": document.getElementById('title-subtask').value,\r\n                \"describe\":''\r\n            }\r\n            await axios.post(`${BASE_URL}/tasks/` + idtask + '/subtasks',newSubTask);\r\n            setReLoadSubTasks(true);\r\n            document.getElementById('title-subtask').value = null;\r\n        }\r\n    }\r\n    const onDeleteSubTask = async (id_delete_sub_task) => {\r\n        await axios.delete(`${BASE_URL}/tasks/`+id_delete_sub_task);\r\n        setReLoadSubTasks(true);\r\n    }\r\n    const onUpdateSubTask = async (id_edit_subtask,title_edit_subtask) => {\r\n        const editSubTask = {\r\n            \"title\": title_edit_subtask,\r\n            \"describe\": ''\r\n        }\r\n        await axios.put(`${BASE_URL}/tasks/`+id_edit_subtask,editSubTask);\r\n        setReLoadSubTasks(true);\r\n    }\r\n    return (\r\n        <div className=\"body-form\" >\r\n            <h2 className=\"Topic-form\"> Task Detail</h2>\r\n            <div  className=\"input-title\">\r\n                <div>Title :</div>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name-hashtag\"\r\n                    defaultValue = {task.title}/>\r\n            </div>\r\n            <div className=\"input-description\">\r\n                <label className=\"name-description\">Description : </label>\r\n                <textarea\r\n                    name=\"textValue\"\r\n                    id=\"valueDescribeTask\"\r\n                    className=\"description-task\"\r\n                    defaultValue = {task.describe}/>\r\n            </div>\r\n            <div className=\"date-task\">\r\n                <div className=\"name-date\">Date of Task</div>\r\n                <DatePicker className=\"date\"\r\n                            dateFormat=\"dd/MM/yyyy\"\r\n                            selected={startDate}\r\n                            onChange={(date) => setStartDate(date)}/>\r\n            </div>\r\n            <div className=\"due-date\">\r\n                <div className=\"name-duedate\"> Due Day </div>\r\n                <DatePicker\r\n                            className=\"duedate\"\r\n                            dateFormat=\"dd/MM/yyyy\"\r\n                            selected={startDueDate}\r\n                            onChange={(date) => setStartDueDate(date)} />\r\n            </div>\r\n            <div className=\"board-subtask\">\r\n                <div>SubTask : </div>\r\n                <div className=\"list-hashtag\">\r\n                    {subtasks && subtasks.length > 0 && subtasks.map((subtask  ,index) =>{\r\n                        return (\r\n                            <SubTask\r\n                                key = {subtask.id}\r\n                                subtask = {subtask}\r\n                                onDeleteSubTask = {onDeleteSubTask}\r\n                                onUpdateSubTask = {onUpdateSubTask}\r\n                            />\r\n                        )\r\n                    })}\r\n                    <div className='add-new-subtask'>\r\n                        <div  className=\"name-subtask\">\r\n                            Title : <input type=\"text\" name=\"title\" id=\"title-subtask\"/>\r\n                        </div>\r\n                        <button className=\"add-button\" onClick={AddNewSubTaskInTask}> Add </button>\r\n                    </div>\r\n                </div>\r\n            <div className=\"list-hashtag\">\r\n                <div>Hashtag : </div>\r\n                <Multiselect\r\n                    displayValue=\"key\"\r\n                    options={optionHashTags}\r\n                    selectedValues={optionSelectedHashTags}\r\n                    onSelect={ChangeSelectedHashTags}\r\n                    onRemove={ChangeSelectedHashTags}\r\n                />\r\n            </div>\r\n            </div>\r\n            <div className=\"buttons\" >\r\n                <button className=\"save-button\" onClick={AcceptChangeTask}> Save </button>\r\n                <button className=\"cancel-button\">\r\n                    <Link to=\"/dashboard\" className=\"return-dashboard\">Cancel</Link>\r\n                </button>\r\n                <button className=\"delete-button\" onClick={DeleteTask}> Delete </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default FormAddTaskDetail","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link,\r\n    useSearchParams,\r\n  } from \"react-router-dom\";\r\nimport './BoardContent.scss'\r\nimport Column from \"../Column/Column\";\r\nimport { Container, Draggable } from \"react-smooth-dnd\";\r\nimport {applyDrag} from \"../../utilities/dragDrop\";\r\nimport axios from \"axios\";\r\nimport {BASE_URL} from \"../../index\";\r\nimport moment from \"moment\";\r\nimport FormTaskDetail from \"../FormTaskDetail/FormTaskDetail\";\r\nimport task from \"../Task/Task\";\r\nconst axiosHeaders =  {\r\n    'Content-Type': 'application/json',\r\n    'Accept':'*/*'\r\n    }\r\nconst BoardContent = ()  =>{\r\n    const [board, setBoard] = useState({});\r\n    const [columns, setColumns] = useState([]);\r\n    const [searchParam, setSearchParams] = useSearchParams();\r\n    const [ReLoadBoardContent, setReLoadBoardContent] = useState(false);\r\n    useEffect(()=>{\r\n        setReLoadBoardContent(true);\r\n    },[searchParam])\r\n    useEffect(() => {\r\n        const fetchHashTags = async () => {\r\n            const idHashtag=searchParam.get('hashtag');\r\n            const valueDate=searchParam.get('date');\r\n            var bonusCondition = '';\r\n            if(idHashtag && idHashtag!= 0 && idHashtag != 'null') {bonusCondition = '?hashtagId='+idHashtag;}\r\n            let dataColumn = [];\r\n            let date = moment();\r\n            if(valueDate && Boolean(valueDate) != false) date = moment(valueDate,'DD-MM-YYYY');\r\n            for (let i=0;i<3;i++)\r\n            {\r\n                let res = await axios.get(`${BASE_URL}/tasks/date/`+date.format(\"YYYY-MM-DD\")+bonusCondition);\r\n                dataColumn.push({\r\n                    id:date.format(\"YYYY-MM-DD\"),\r\n                    title: date.format(\"dddd\"),\r\n                    describe: date.format(\"MMMM Do\"),\r\n                    tasks:res.data\r\n                });\r\n                date.add(1, 'day');\r\n            }\r\n            setColumns(dataColumn);\r\n            setReLoadBoardContent(false);\r\n        }\r\n        fetchHashTags();\r\n    },[ReLoadBoardContent]);\r\n    const AddNewTask = async (newTask) => {\r\n        await axios.post(`${BASE_URL}/tasks/`,newTask,{headers:axiosHeaders});\r\n        setReLoadBoardContent(true);\r\n    }\r\n    const onTaskDrop = (dropResult,columnId) => {\r\n        if(dropResult.removedIndex !== null || dropResult.addedIndex !== null )\r\n        {\r\n            ChangeDateOfTask(dropResult.payload,columnId);\r\n            let newColumns = [...columns];\r\n            let currentColumn = newColumns.find(column => column.id === columnId);\r\n            currentColumn.tasks = applyDrag(currentColumn.tasks,dropResult);\r\n            currentColumn.taskOrder = currentColumn.tasks.map(task =>task.id);\r\n            setColumns(newColumns)\r\n        }\r\n    }\r\n    const ChangeDateOfTask = (task, dateChange) => {\r\n        const changeDate = async (id_task,dateChange) => {\r\n            const updateDate = {\r\n                \"newDate\": dateChange\r\n            }\r\n            await axios.put(`${BASE_URL}/tasks/`+id_task+`/change_date/`,updateDate);\r\n        }\r\n        if(task.date.slice(0,10) != dateChange) changeDate(task.id,dateChange);\r\n    }\r\n    const setColumnInBoard = (columns) => {\r\n        return ( columns && columns.length > 0 && columns.map((column  ,index) =>{\r\n            return (\r\n                    <Column\r\n                        key = {column.id}\r\n                        column = {column}\r\n                        onTaskDrop = {onTaskDrop}\r\n                        AddNewTask = {AddNewTask}\r\n                    />\r\n            )\r\n        }))\r\n    }\r\n    return (\r\n            <div className=\"board-columns\">\r\n                {setColumnInBoard(columns)}\r\n            </div>\r\n    )\r\n}\r\nexport default BoardContent","import React, { useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport {BASE_URL} from \"../index\";\r\n\r\nexport const applyDrag = (arr, dragResult) => {\r\n    const { removedIndex, addedIndex, payload } = dragResult;\r\n    if (Boolean(removedIndex) && Boolean(addedIndex)) return arr;\r\n    const result = [...arr];\r\n\r\n    let itemToAdd = payload;\r\n\r\n    if (removedIndex !== null) {\r\n        itemToAdd = result.splice(removedIndex, 1)[0];\r\n    }\r\n\r\n    if (addedIndex !== null) {\r\n        result.splice(addedIndex, 0, itemToAdd);\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const generateItems = (count, creator) => {\r\n    const result = [];\r\n    for (let i = 0; i < count; i++) {\r\n        result.push(creator(i));\r\n    }\r\n    return result;\r\n};","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\r\nconst FormAddHashtag = (props) => {\r\n  const { onCreateHashtag,modalVisible} = props;\r\n  const [name, setName] = useState(\"\");\r\n  const [isVisible, setIsVisible] = useState(modalVisible);\r\n  const onChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newHashtag = {\r\n      name,\r\n    };\r\n    onCreateHashtag(newHashtag);\r\n    setIsVisible(false);\r\n  };\r\n  const handleClick = event => {\r\n    setIsVisible(current => !current);\r\n  };\r\n  // eslint-disable-next-line no-lone-blocks\r\n  {\r\n    if(isVisible){\r\n        return (\r\n            <Form  className=\"bg-dark\" onSubmit={onSubmit}>\r\n              <FormGroup>\r\n                <Label>Name</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  value={name}\r\n                  onChange={onChange}\r\n                  name=\"name\"\r\n                  placeholder=\"Enter hashtag\"\r\n                  required\r\n                ></Input>\r\n              </FormGroup>\r\n              <div className=\"col d-flex justify-content-center\">\r\n                <Button type=\"submit\">Submit</Button>\r\n                <Button onClick={handleClick} className=\"btn btn-danger ml-2\">\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          );\r\n    }\r\n    else {\r\n        return <></>\r\n    }\r\n  }\r\n  \r\n};\r\nexport default FormAddHashtag;","import React, { useState, useContext, useEffect } from \"react\";\r\n\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { BASE_URL } from \"../../index\";\r\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\r\nconst FormEditHashtag = (props) => {\r\n  const { onEditHashtag, modalVisible, id } = props;\r\n  const [name, setName] = useState({});\r\n  const [isVisible, setIsVisible] = useState(modalVisible);\r\n  const getData = () => {\r\n    fetch(`${BASE_URL}/hashtags/${id}`)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        const hashtag = res;\r\n        setName(hashtag.name);\r\n      })\r\n      .catch((error) => {\r\n        alert(error.data);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n  const onChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    e.preventDefault();\r\n    const newHashtag = {\r\n      id,\r\n      name,\r\n    };\r\n    onEditHashtag(newHashtag);\r\n    setIsVisible(false);\r\n  };\r\n  const handleClick = (event) => {\r\n    setIsVisible((current) => !current);\r\n  };\r\n  if (isVisible) {\r\n    return (\r\n      <Form className=\"bg-dark\" onSubmit={onSubmit}>\r\n        <FormGroup>\r\n          <Label>Name hashtag</Label>\r\n          <Input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={onChange}\r\n            name=\"name\"\r\n            placeholder=\"Enter hashtag\"\r\n            required\r\n          ></Input>\r\n        </FormGroup>\r\n        <div className=\"col d-flex justify-content-center\">\r\n          <Button type=\"submit\">Edit</Button>\r\n          <Button\r\n            onClick={handleClick}\r\n            to=\"/dashboard\"\r\n            className=\"btn btn-danger ml-2\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    );\r\n  } else {\r\n    return <></>;\r\n  }\r\n};\r\nexport default FormEditHashtag;\r\n","/* eslint-disable no-undef */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"./Hashtag.scss\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { AiOutlineDelete, AiFillEdit } from \"react-icons/ai\";\r\nimport axios from \"axios\";\r\nimport { ListGroupItem, Button } from \"reactstrap\";\r\nimport FormAddHashtag from \"../FormAddHashtag/FormAddHashtag\";\r\nimport { BASE_URL } from \"../../index\";\r\nimport FormEditHashtag from \"../FormEditHashtag/FormEditHashtag\";\r\n\r\nconst Hashtag = (props) => {\r\n  const [deleteStatus, setDeleteStatus] = useState(true);\r\n  const [searchParam, setSearchParams] = useSearchParams();\r\n  const generateColor = () => {\r\n    return \"#\" + Math.random().toString(16).substr(-6);\r\n  };\r\n  const [listHashtag, setChannel] = useState([]);\r\n  const getData = () => {\r\n    fetch(BASE_URL + \"/hashtags\")\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        const allHashtag = { id: 0, name: \"All\" };\r\n        setChannel([\r\n          allHashtag,\r\n          ...res.sort((a, b) => (a.name > b.name ? 1 : -1)),\r\n        ]);\r\n      })\r\n      .catch((error) => {\r\n        alert(error.data);\r\n      });\r\n  };\r\n  const onEditHashtag = (e) => {\r\n    axios\r\n      .put(`${BASE_URL}/hashtags/${e.id}`, e)\r\n      .then((response) => {\r\n        setDeleteStatus(!deleteStatus);\r\n      })\r\n      .catch((error) => {\r\n        alert(error.data);\r\n      });\r\n  };\r\n  const deleteHashtag = (e) => {\r\n    axios.delete(BASE_URL + \"/hashtags/\" + e).then((response) => {\r\n      if (response.data != null) {\r\n        setDeleteStatus(!deleteStatus);\r\n      }\r\n    });\r\n  };\r\n  const onCreateHashtag = (e) => {\r\n    axios\r\n      .post(BASE_URL + \"/hashtags/\", e)\r\n      .then((response) => {\r\n        setDeleteStatus(!deleteStatus);\r\n      })\r\n      .catch((error) => {\r\n        alert(error.data);\r\n      });\r\n  };\r\n  const findByHashtag = (e) => {\r\n    const date= searchParam.get('date');\r\n    setSearchParams({ hashtag: e,\r\n      date:date });\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, [deleteStatus]);\r\n  const loadHashtag = listHashtag.map((listHashtag) => {\r\n    return (\r\n      <ListGroupItem\r\n        onClick={() => findByHashtag(listHashtag.id)}\r\n        className=\"d-flex sub-hash-tag\"\r\n        key={listHashtag.id}\r\n      >\r\n        <p style={{ color: generateColor() }}># </p>\r\n        <p>{listHashtag.name}</p>\r\n        {listHashtag.id ? (\r\n          <div className=\"ml-auto active\">\r\n            <Popup\r\n              trigger={\r\n                <button className=\"popup_btn\">\r\n                  <AiFillEdit />\r\n                </button>\r\n              }\r\n              position=\"top left\"\r\n            >\r\n              <div className=\"popup\">\r\n                <FormEditHashtag\r\n                  onEditHashtag={onEditHashtag}\r\n                  modalVisible={true}\r\n                  id={listHashtag.id}\r\n                />\r\n              </div>\r\n            </Popup>\r\n            <Button\r\n              color=\"white\"\r\n              size=\"sm\"\r\n              onClick={() => deleteHashtag(listHashtag.id)}\r\n            >\r\n              <AiOutlineDelete />\r\n            </Button>\r\n          </div>\r\n        ) : null}\r\n      </ListGroupItem>\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"hashtags\">\r\n      <div className=\"hashtags-list\">\r\n        <div className=\"hashtags-list-item\">\r\n          <ul>{loadHashtag}</ul>\r\n        </div>\r\n\r\n        <Popup\r\n          trigger={<button> + Manage Channels</button>}\r\n          position=\"top left\"\r\n        >\r\n          <div className=\"popup\">\r\n            <FormAddHashtag\r\n              onCreateHashtag={onCreateHashtag}\r\n              modalVisible={true}\r\n            />\r\n          </div>\r\n        </Popup>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Hashtag;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport'./FilterColumn.scss';\r\nimport Calendar from 'react-calendar';\r\nimport Hashtag from \"../Hashtag/Hashtag\";\r\nimport {FormatDateToAdd} from \"../../utilities/formatDate\";\r\nimport {useSearchParams} from \"react-router-dom\";\r\nconst FilterColumn = () =>{\r\n    const [value, onChange] = useState(new Date());\r\n    const [searchParam, setSearchParams] = useSearchParams();\r\n        useEffect(() => {\r\n            const hashtag= searchParam.get('hashtag');\r\n           setSearchParams({\r\n               hashtag:hashtag,\r\n            date: FormatDateToAdd(value)\r\n        });\r\n    }, [value]);\r\n    return (\r\n            <div className=\"filter-column\">\r\n                <Calendar className=\"calendar\"\r\n                          onClickDay={(value) => onChange(value)}\r\n                          value={value}\r\n                          selectRange={false}\r\n                          minDetail=\"month\"\r\n                />\r\n                <div className=\"list-hashtag\"> Channels\r\n                <Hashtag/>           \r\n                </div>\r\n            </div>\r\n    )\r\n}\r\nexport default FilterColumn","import React from \"react\";\r\nimport './MainBoard.scss';\r\nimport BoardContent from \"../BoardContent/BoardContent\";\r\nimport FilterColumn from \"../FilterColumn/FilterColumn\";\r\nconst MainBoard = () => {\r\n    return (\r\n        <div className='main-board'>\r\n            <FilterColumn/>\r\n            <BoardContent />\r\n        </div>\r\n    )\r\n}\r\nexport default MainBoard","import AppBar from \"./components/AppBar/AppBar\";\r\nimport BoardBar from \"./components/BoardBar/BoardBar\";\r\nimport MainBoard from \"./components/MainBoard/MainBoard\";\r\nfunction App() {\r\n    return (\r\n        <div className=\"sunsame-clone\">\r\n            <AppBar/>\r\n            <BoardBar/>\r\n            <MainBoard/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './App.scss';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport 'bootstrap/dist/css/bootstrap-grid.min.css';\r\nimport { Route, Routes,BrowserRouter } from 'react-router-dom';\r\nimport FormAddHashtag from \"./components/FormAddHashtag/FormAddHashtag\";\r\nimport FormTaskDetail from \"./components/FormTaskDetail/FormTaskDetail\";\r\nexport const  BASE_URL= \"https://sunsama.herokuapp.com\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <BrowserRouter>\r\n          <Routes>\r\n              <Route path='/' element= {<App />}></Route>\r\n              <Route path='/add-hashtag' element= {<FormAddHashtag />}></Route>\r\n              <Route path=\"/task-detail/:idtask\" element= {<FormTaskDetail />}></Route>\r\n          </Routes>\r\n      </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}